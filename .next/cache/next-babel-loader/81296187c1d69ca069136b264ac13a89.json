{"ast":null,"code":"var _jsxFileName = \"C:\\\\Frank\\\\Proyectos\\\\notaria-roman-public\\\\frontend\\\\components\\\\tramites-forms\\\\constitucion-de-empresas.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport Link from \"next/link\";\nimport { useForm } from \"react-hook-form\";\nimport $ from \"jquery\";\nimport PopupThanks from \"../contacto/popup-thanks\";\nimport Config from \"../../config\";\nimport FormPayment from \"../../components/form-payment\";\nimport axios from \"axios\";\n\nconst ConstitucionEmpresas = props => {\n  const {\n    register,\n    errors,\n    handleSubmit\n  } = useForm();\n  const {\n    0: showForm,\n    1: setShowForm\n  } = useState(false);\n  const {\n    0: formBody,\n    1: setFormBody\n  } = useState(true);\n  const {\n    0: fileImg,\n    1: setFileImg\n  } = useState([]);\n  const {\n    0: countFile,\n    1: setCountFile\n  } = useState([]);\n  const {\n    0: fileImg2,\n    1: setFileImg2\n  } = useState([]);\n  const {\n    0: countFile2,\n    1: setCountFile2\n  } = useState([]);\n  useEffect(() => {\n    var country = 'Peru',\n        countryCode = \"+51\";\n    $(document).click(function (e) {\n      if ($(e.target).closest('.container-flag').length <= 0 && !$(e.target).hasClass('flat-item')) $('.list-flag').fadeOut(150);\n    });\n    /********/\n\n    $(document).on('click', function (e) {\n      //----------\n      if ($(e.target).hasClass('item-popup')) {\n        setShowForm(false);\n      }\n\n      if ($(e.target).hasClass('int-pscroll')) {\n        setShowForm(false);\n      }\n    });\n  }, []);\n\n  const alphanumericValues = str => {\n    return str.toString() // Cast to string\n    .toLowerCase() // Convert the string to lowercase letters\n    .normalize('NFD') // The normalize() method returns the Unicode Normalization Form of a given string.\n    .trim() // Remove whitespace from both sides of a string\n    .replace(/\\s+/g, '-') // Replace spaces with -\n    .replace(/[^\\w\\-]+/g, '') // Remove all non-word chars\n    .replace(/\\-\\-+/g, '-');\n  };\n\n  const formReset = () => {\n    setFileImg([]);\n    setCountFile([]); //document.querySelector(\"#form-data\").reset()\n\n    document.getElementsByTagName(\"form\")[0].reset();\n    document.querySelector('#comprobante_img_place').innerHTML = \"Adjuntar voucher\";\n    document.querySelector('#sle_estatuto_place').innerHTML = \"Adjuntar archivo\";\n  };\n\n  const fileOnChange = e => {\n    if (e.target.files.length > 0) {\n      let newNameDate = new Date().getTime();\n      let file = e.target.files[0];\n      let newName1 = file.name.split('.').shift();\n      let newName = alphanumericValues(newName1);\n      let blob = file.slice(0, file.size, file.type);\n      let newFile = new File([blob], newName + '-' + newNameDate + '.' + file.type.split('/')[1], {\n        type: file.type\n      });\n      document.getElementById('comprobante_img_place').innerHTML = e.target.value.split(/(\\\\|\\/)/g).pop();\n      setFileImg(newFile);\n      setCountFile([...countFile, newName]);\n      document.querySelector('#name_img').value = newName + '-' + newNameDate + '.' + file.type.split('/')[1];\n    }\n  };\n\n  const fileOnChange2 = e => {\n    if (e.target.files.length > 0) {\n      let newNameDate = new Date().getTime();\n      let file = e.target.files[0];\n      let newName1 = file.name.split('.').shift();\n      let newName = alphanumericValues(newName1);\n      let blob = file.slice(0, file.size, file.type);\n      let newFile = new File([blob], newName + '-' + newNameDate + '.' + file.type.split('/')[1], {\n        type: file.type\n      });\n      document.getElementById('sle_estatuto_place').innerHTML = e.target.value.split(/(\\\\|\\/)/g).pop();\n      setFileImg2(newFile);\n      setCountFile2([...countFile2, newName]);\n      document.querySelector('#name_img_2').value = newName + '-' + newNameDate + '.' + file.type.split('/')[1];\n    }\n  };\n\n  const onSubmit = data => {\n    console.log(data); //return false\n\n    if (countFile.length > 0) {\n      var formData = new FormData();\n\n      if (countFile2.length > 0) {\n        formData.append(\"demo\", fileImg2);\n      }\n\n      formData.append(\"demo\", fileImg);\n      axios.post(Config.URL_BACK + '/upload-only-img', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      }).then(res => {\n        console.log('Exito');\n      }).catch(err => {\n        console.error('Error');\n      });\n    }\n\n    let sendValue = data;\n    axios({\n      method: 'post',\n      url: Config.API_PATH + '/p-ce',\n      data: sendValue\n    }).then(function (response) {\n      setShowForm(true);\n      formReset();\n    });\n  };\n\n  const triggerClosePopup = () => {\n    setShowForm(false);\n  };\n\n  return __jsx(React.Fragment, null, showForm && __jsx(PopupThanks, {\n    eClick: triggerClosePopup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }\n  }, __jsx(\"h3\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 21\n    }\n  }, \"\\xA1Gracias!\"), __jsx(\"p\", {\n    className: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 21\n    }\n  }, \"Gracias por ponerte en contacto con \", __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 84\n    }\n  }, \"Notar\\xEDa Rom\\xE1n.\"), \" \", __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 116\n    }\n  }), \"Uno de nuestros asesores se comunicar\\xE1 con usted a la brevedad.\")), __jsx(\"div\", {\n    className: \"section tramite-form with-bg-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"caption caption-static caption-type-1 caption-type-2 \" + props.width,\n    style: {\n      marginTop: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    className: \"parent-title-2 start-xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 29\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 33\n    }\n  }, __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 37\n    }\n  }, \"Constituci\\xF3n de empresas\"))), __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 29\n    }\n  }, __jsx(\"div\", {\n    className: \"block-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 33\n    }\n  }, __jsx(\"input\", {\n    type: \"hidden\",\n    id: \"name_img\",\n    name: \"name_img\",\n    ref: register({\n      required: false\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 37\n    }\n  }), __jsx(\"input\", {\n    type: \"hidden\",\n    id: \"name_img_2\",\n    name: \"name_img_2\",\n    ref: register({\n      required: false\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 37\n    }\n  }), __jsx(\"div\", {\n    className: \"box-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 37\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"tipo_sociedad\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 41\n    }\n  }, \"Por favor selecciona el \", __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 96\n    }\n  }, \"tipo de sociedad:\")), __jsx(\"select\", {\n    className: \"form-item\",\n    name: \"tipo_sociedad\",\n    id: \"tipo_sociedad\",\n    onChange: e => setFormBody(formBody ? false : true),\n    ref: register({\n      required: \"Este campo es obligatorio\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 41\n    }\n  }, __jsx(\"option\", {\n    hidden: true,\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 45\n    }\n  }, \"Tipo de sociedad\"), __jsx(\"option\", {\n    value: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 45\n    }\n  }, \"Sociedad an\\xF3nima S.A.\"), __jsx(\"option\", {\n    value: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 45\n    }\n  }, \"Sociedad an\\xF3nima cerrada S.A.C.\"), __jsx(\"option\", {\n    value: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 45\n    }\n  }, \"Sociedad de responsabilidad limitada S.R.L\"), __jsx(\"option\", {\n    value: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 45\n    }\n  }, \"Empresa Individual de responsabilidad limitada E.I.R.L.\"), __jsx(\"option\", {\n    value: \"5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 45\n    }\n  }, \"Sociedad colectiva\")), errors.tipo_sociedad && __jsx(\"span\", {\n    className: \"fi-validator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 66\n    }\n  }, errors.tipo_sociedad.message)), __jsx(\"div\", {\n    className: \"form-text-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 37\n    }\n  }, \"Constituyentes:\"), __jsx(\"div\", {\n    className: \"box-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 37\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"co_cantidad\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 41\n    }\n  }, \"Cantidad:\"), __jsx(\"select\", {\n    className: \"form-item\",\n    id: \"co_cantidad\",\n    name: \"co_cantidad\",\n    ref: register({\n      required: \"Este campo es obligatorio\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 41\n    }\n  }, __jsx(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 45\n    }\n  }, \"Seleccione el n\\xFAmero de socios\"), Array.apply(1, Array(20)).map(function (x, i) {\n    return __jsx(\"option\", {\n      key: i + 1,\n      value: i + 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 56\n      }\n    }, i + 1 <= 9 ? '0' + (i + 1) : i + 1);\n  })), errors.co_cantidad && __jsx(\"span\", {\n    className: \"fi-validator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 64\n    }\n  }, errors.co_cantidad.message)), __jsx(\"div\", {\n    className: \"form-text-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 37\n    }\n  }, \"Constituyente 1:\"), __jsx(\"div\", {\n    className: \"box-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 37\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"co1_nombre\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 41\n    }\n  }, \"Nombre completo:\"), __jsx(\"input\", {\n    type: \"text\",\n    id: \"co1_nombre\",\n    name: \"co1_nombre\",\n    className: \"form-item\",\n    onInput: e => e.target.value = e.target.value.replace(/[^ a-záéíóúüñ]+/ig, \"\"),\n    ref: register({\n      required: \"Este campo es obligatorio\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 41\n    }\n  }), errors.co1_nombre && __jsx(\"span\", {\n    className: \"fi-validator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 63\n    }\n  }, errors.co1_nombre.message)), __jsx(\"div\", {\n    className: \"group-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 37\n    }\n  }, __jsx(\"div\", {\n    className: \"g-form-col g-form-col-2 g-form-col-2-type-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 41\n    }\n  }, __jsx(\"p\", {\n    className: \"box-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 45\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"co1_tipo_doc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 49\n    }\n  }, \"Tipo de documento:\"), __jsx(\"select\", {\n    className: \"form-item\",\n    name: \"co1_tipo_doc\",\n    onChange: e => document.getElementById('co1_num_doc').focus(),\n    ref: register({\n      required: \"Este campo es obligatorio\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 49\n    }\n  }, __jsx(\"option\", {\n    defaultValue: true,\n    value: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 53\n    }\n  }, \"DNI\"), __jsx(\"option\", {\n    value: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 53\n    }\n  }, \"Carnet de extranjeria\"), __jsx(\"option\", {\n    value: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 53\n    }\n  }, \"Pasaporte\")), errors.co1_tipo_doc && __jsx(\"span\", {\n    className: \"fi-validator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 73\n    }\n  }, errors.co1_tipo_doc.message)), __jsx(\"p\", {\n    className: \"box-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 45\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"co1_num_doc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 49\n    }\n  }, \"N\\xFAmero de Documento\"), __jsx(\"input\", {\n    type: \"text\",\n    id: \"co1_num_doc\",\n    name: \"co1_num_doc\",\n    className: \"form-item\",\n    ref: register({\n      required: \"Apellidos es obligatorio\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 49\n    }\n  }), errors.co1_num_doc && __jsx(\"span\", {\n    className: \"fi-validator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 72\n    }\n  }, errors.co1_num_doc.message)))), __jsx(\"div\", {\n    className: \"box-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 37\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"co1_estado_civil\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 41\n    }\n  }, \"Estado civil:\"), __jsx(\"select\", {\n    className: \"form-item\",\n    id: \"co1_estado_civil\",\n    name: \"co1_estado_civil\",\n    ref: register({\n      required: \"Este campo es obligatorio\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 41\n    }\n  }, __jsx(\"option\", {\n    hidden: true,\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 45\n    }\n  }, \"Seleccione un estado\"), __jsx(\"option\", {\n    value: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 45\n    }\n  }, \"Soltero\"), __jsx(\"option\", {\n    value: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 45\n    }\n  }, \"Casado\"), __jsx(\"option\", {\n    value: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 45\n    }\n  }, \"divorciado\"), __jsx(\"option\", {\n    value: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 45\n    }\n  }, \"Viudo\")), errors.co1_estado_civil && __jsx(\"span\", {\n    className: \"fi-validator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 69\n    }\n  }, errors.co1_estado_civil.message)), __jsx(\"div\", {\n    className: \"box-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 37\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"co1_nacionalidad\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 41\n    }\n  }, \"Nacionalidad\"), __jsx(\"input\", {\n    type: \"text\",\n    id: \"co1_nacionalidad\",\n    name: \"co1_nacionalidad\",\n    className: \"form-item\",\n    onInput: e => e.target.value = e.target.value.replace(/[^ a-záéíóúüñ]+/ig, \"\"),\n    ref: register({\n      required: \"Este campo es obligatorio\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 41\n    }\n  }), errors.co1_nacionalidad && __jsx(\"span\", {\n    className: \"fi-validator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 69\n    }\n  }, errors.co1_nacionalidad.message)), __jsx(\"div\", {\n    className: \"box-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 37\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"co1_direccion\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 41\n    }\n  }, \"Direcci\\xF3n\"), __jsx(\"input\", {\n    type: \"text\",\n    id: \"co1_direccion\",\n    name: \"co1_direccion\",\n    className: \"form-item\",\n    ref: register({\n      required: \"Este campo es obligatorio\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 41\n    }\n  }), errors.co1_direccion && __jsx(\"span\", {\n    className: \"fi-validator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 66\n    }\n  }, errors.co1_direccion.message)), __jsx(\"div\", {\n    className: \"box-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 37\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"co1_ocupacion\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 41\n    }\n  }, \"Ocupaci\\xF3n:\"), __jsx(\"input\", {\n    type: \"text\",\n    id: \"co1_ocupacion\",\n    name: \"co1_ocupacion\",\n    className: \"form-item\",\n    onInput: e => e.target.value = e.target.value.replace(/[^ a-záéíóúüñ]+/ig, \"\"),\n    ref: register({\n      required: \"Este campo es obligatorio\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 41\n    }\n  }), errors.co1_ocupacion && __jsx(\"span\", {\n    className: \"fi-validator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 66\n    }\n  }, errors.co1_ocupacion.message)), __jsx(\"div\", {\n    className: \"box-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 37\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"co1_conyuge\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 41\n    }\n  }, \"C\\xF3nyuge (opcional):\"), __jsx(\"input\", {\n    type: \"text\",\n    id: \"co1_conyuge\",\n    name: \"co1_conyuge\",\n    className: \"form-item\",\n    onInput: e => e.target.value = e.target.value.replace(/[^ a-záéíóúüñ]+/ig, \"\"),\n    ref: register({\n      required: false\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 41\n    }\n  })), __jsx(\"div\", {\n    className: \"form-text-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 37\n    }\n  }, \"Sobre la empresa:\"), __jsx(\"div\", {\n    className: \"box-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 37\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"sle_nombre\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 41\n    }\n  }, \"Nombres de la empresa:\"), __jsx(\"input\", {\n    type: \"text\",\n    id: \"sle_nombre\",\n    name: \"sle_nombre\",\n    className: \"form-item\",\n    onInput: e => e.target.value = e.target.value.replace(/[^ a-záéíóúüñ]+/ig, \"\"),\n    ref: register({\n      required: \"Este campo es obligatorio\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 41\n    }\n  }), errors.sle_nombre && __jsx(\"span\", {\n    className: \"fi-validator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 63\n    }\n  }, errors.sle_nombre.message)), __jsx(\"div\", {\n    className: \"box-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 37\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"sle_sigla\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 41\n    }\n  }, \"Sigla (opcional):\"), __jsx(\"input\", {\n    type: \"text\",\n    id: \"sle_sigla\",\n    name: \"sle_sigla\",\n    className: \"form-item\",\n    onInput: e => e.target.value = e.target.value.replace(/[^ a-záéíóúüñ]+/ig, \"\"),\n    ref: register({\n      required: false\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 41\n    }\n  })), __jsx(\"div\", {\n    className: \"box-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 37\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"sle_capital_social\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 41\n    }\n  }, \"Capital social S/.:\"), __jsx(\"input\", {\n    type: \"text\",\n    id: \"sle_capital_social\",\n    name: \"sle_capital_social\",\n    className: \"form-item\",\n    onInput: e => e.target.value = e.target.value.replace(/[^ a-záéíóúüñ]+/ig, \"\"),\n    ref: register({\n      required: \"Este campo es obligatorio\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 41\n    }\n  }), errors.sle_capital_social && __jsx(\"span\", {\n    className: \"fi-validator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 71\n    }\n  }, errors.sle_capital_social.message)), __jsx(\"div\", {\n    className: \"box-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 37\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"sle_division\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 41\n    }\n  }, \"Divisi\\xF3n de acciones:\"), __jsx(\"textarea\", {\n    id: \"sle_division\",\n    name: \"sle_division\",\n    className: \"form-item item-textarea\",\n    ref: register({\n      required: \"Este campo es obligatorio\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 41\n    }\n  }), errors.sle_division && __jsx(\"span\", {\n    className: \"fi-validator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 65\n    }\n  }, errors.sle_division.message)), __jsx(\"div\", {\n    className: \"box-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 37\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"sle_domicilio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 41\n    }\n  }, \"Domicilio de la empresa:\"), __jsx(\"input\", {\n    type: \"text\",\n    id: \"sle_domicilio\",\n    name: \"sle_domicilio\",\n    className: \"form-item\",\n    onInput: e => e.target.value = e.target.value.replace(/[^ a-záéíóúüñ]+/ig, \"\"),\n    ref: register({\n      required: \"Este campo es obligatorio\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 41\n    }\n  }), errors.sle_domicilio && __jsx(\"span\", {\n    className: \"fi-validator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 66\n    }\n  }, errors.sle_domicilio.message)), __jsx(\"div\", {\n    className: \"box-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 37\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"sle_nombre_gerente\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 41\n    }\n  }, \"Nombre del gerente general:\"), __jsx(\"input\", {\n    type: \"text\",\n    id: \"sle_nombre_gerente\",\n    name: \"sle_nombre_gerente\",\n    className: \"form-item\",\n    onInput: e => e.target.value = e.target.value.replace(/[^ a-záéíóúüñ]+/ig, \"\"),\n    ref: register({\n      required: \"Este campo es obligatorio\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 41\n    }\n  }), errors.sle_nombre_gerente && __jsx(\"span\", {\n    className: \"fi-validator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 71\n    }\n  }, errors.sle_nombre_gerente.message)), __jsx(\"div\", {\n    className: \"group-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 37\n    }\n  }, __jsx(\"div\", {\n    className: \"g-form-col g-form-col-2 g-form-col-2-type-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 41\n    }\n  }, __jsx(\"p\", {\n    className: \"box-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 45\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"sle_tipo_doc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 49\n    }\n  }, \"Tipo de documento:\"), __jsx(\"select\", {\n    className: \"form-item\",\n    name: \"sle_tipo_doc\",\n    onChange: e => document.getElementById('sle_num_doc').focus(),\n    ref: register({\n      required: \"Este campo es obligatorio\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 49\n    }\n  }, __jsx(\"option\", {\n    defaultValue: true,\n    value: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 53\n    }\n  }, \"DNI\"), __jsx(\"option\", {\n    value: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 53\n    }\n  }, \"Carnet de extranjeria\"), __jsx(\"option\", {\n    value: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 53\n    }\n  }, \"Pasaporte\")), errors.sle_tipo_doc && __jsx(\"span\", {\n    className: \"fi-validator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 73\n    }\n  }, errors.sle_tipo_doc.message)), __jsx(\"p\", {\n    className: \"box-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 45\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"sle_num_doc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 49\n    }\n  }, \"N\\xFAmero de Documento\"), __jsx(\"input\", {\n    type: \"text\",\n    id: \"sle_num_doc\",\n    name: \"sle_num_doc\",\n    className: \"form-item\",\n    ref: register({\n      required: \"Apellidos es obligatorio\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 49\n    }\n  }), errors.sle_num_doc && __jsx(\"span\", {\n    className: \"fi-validator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 72\n    }\n  }, errors.sle_num_doc.message)))), __jsx(\"div\", {\n    className: \"box-form box-file-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 37\n    }\n  }, __jsx(\"div\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 41\n    }\n  }, \"Estatuto de la empresa:\"), __jsx(\"label\", {\n    className: \"form-item\",\n    id: \"sle_estatuto_place\",\n    htmlFor: \"sle_estatuto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 41\n    }\n  }, \"Adjuntar archivo\"), __jsx(\"input\", {\n    type: \"file\",\n    id: \"sle_estatuto\",\n    name: \"sle_estatuto\",\n    className: \"form-item\",\n    accept: \".doc, .jpg, .jpeg, .pdf\",\n    onChange: e => fileOnChange2(e),\n    ref: register({\n      required: \"Este campo es obligatorio\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 41\n    }\n  }), errors.sle_estatuto && __jsx(\"span\", {\n    className: \"fi-validator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 65\n    }\n  }, errors.sle_estatuto.message)), __jsx(\"div\", {\n    className: \"form-text-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 37\n    }\n  }, \"Datos de contacto\"), __jsx(\"div\", {\n    className: \"box-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 37\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"dc_nombre\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 41\n    }\n  }, \"Nombres completos:\"), __jsx(\"input\", {\n    type: \"text\",\n    id: \"dc_nombre\",\n    name: \"dc_nombre\",\n    className: \"form-item\",\n    onInput: e => e.target.value = e.target.value.replace(/[^ a-záéíóúüñ]+/ig, \"\"),\n    ref: register({\n      required: \"Este campo es obligatorio\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 41\n    }\n  }), errors.dc_nombre && __jsx(\"span\", {\n    className: \"fi-validator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 62\n    }\n  }, errors.dc_nombre.message)), __jsx(\"div\", {\n    className: \"box-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 37\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"dc_telefono\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 41\n    }\n  }, \"Tel\\xE9fonos:\"), __jsx(\"input\", {\n    type: \"text\",\n    id: \"dc_telefono\",\n    name: \"dc_telefono\",\n    className: \"form-item\",\n    onInput: e => e.target.value = e.target.value.replace(/[^0-9]+/ig, ''),\n    ref: register({\n      required: \"Este campo es obligatorio\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 41\n    }\n  }), errors.dc_telefono && __jsx(\"span\", {\n    className: \"fi-validator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 64\n    }\n  }, errors.dc_telefono.message)), __jsx(\"div\", {\n    className: \"box-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 37\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"dc_email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 41\n    }\n  }, \"Email:\"), __jsx(\"input\", {\n    type: \"text\",\n    id: \"dc_email\",\n    name: \"dc_email\",\n    className: \"form-item\",\n    placeholder: \"Detalle con qui\\xE9n viaja y otros\",\n    ref: register({\n      required: \"Este campo es obligatorio\",\n      pattern: {\n        value: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n        message: \"Ingresar un Email valido\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 41\n    }\n  }), errors.dc_email && __jsx(\"span\", {\n    className: \"fi-validator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 61\n    }\n  }, errors.dc_email.message)), __jsx(FormPayment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 37\n    }\n  }), __jsx(\"div\", {\n    className: \"box-form box-file-img box-form-mg-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 37\n    }\n  }, __jsx(\"div\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 41\n    }\n  }, \"Comprobante de pago (opcional):\"), __jsx(\"label\", {\n    className: \"form-item\",\n    id: \"comprobante_img_place\",\n    htmlFor: \"comprobante_img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 41\n    }\n  }, \"Adjuntar voucher\"), __jsx(\"input\", {\n    type: \"file\",\n    id: \"comprobante_img\",\n    name: \"comprobante_img\",\n    className: \"form-item\",\n    placeholder: \"Detalle con qui\\xE9n viaja y otros\",\n    accept: \".jpg, .jpeg, .png\",\n    onChange: e => fileOnChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 41\n    }\n  })), __jsx(\"button\", {\n    type: \"submit\",\n    className: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 37\n    }\n  }, \"Enviar tr\\xE1mite\")))))));\n};\n\nexport default ConstitucionEmpresas;","map":{"version":3,"sources":["C:/Frank/Proyectos/notaria-roman-public/frontend/components/tramites-forms/constitucion-de-empresas.js"],"names":["React","useEffect","useState","Link","useForm","$","PopupThanks","Config","FormPayment","axios","ConstitucionEmpresas","props","register","errors","handleSubmit","showForm","setShowForm","formBody","setFormBody","fileImg","setFileImg","countFile","setCountFile","fileImg2","setFileImg2","countFile2","setCountFile2","country","countryCode","document","click","e","target","closest","length","hasClass","fadeOut","on","alphanumericValues","str","toString","toLowerCase","normalize","trim","replace","formReset","getElementsByTagName","reset","querySelector","innerHTML","fileOnChange","files","newNameDate","Date","getTime","file","newName1","name","split","shift","newName","blob","slice","size","type","newFile","File","getElementById","value","pop","fileOnChange2","onSubmit","data","console","log","formData","FormData","append","post","URL_BACK","headers","then","res","catch","err","error","sendValue","method","url","API_PATH","response","triggerClosePopup","width","marginTop","required","tipo_sociedad","message","Array","apply","map","x","i","co_cantidad","co1_nombre","focus","co1_tipo_doc","co1_num_doc","co1_estado_civil","co1_nacionalidad","co1_direccion","co1_ocupacion","sle_nombre","sle_capital_social","sle_division","sle_domicilio","sle_nombre_gerente","sle_tipo_doc","sle_num_doc","sle_estatuto","dc_nombre","dc_telefono","pattern","dc_email"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport Link from \"next/link\"\r\nimport {useForm} from \"react-hook-form\"\r\nimport $ from \"jquery\"\r\nimport PopupThanks from \"../contacto/popup-thanks\"\r\nimport Config from \"../../config\"\r\nimport FormPayment from \"../../components/form-payment\"\r\nimport axios from \"axios\"\r\n\r\n\r\nconst ConstitucionEmpresas = (props) => {\r\n\r\n    const {register, errors, handleSubmit} = useForm()\r\n    const [showForm, setShowForm] = useState(false)\r\n    const [formBody, setFormBody] = useState(true)\r\n\r\n    const [fileImg, setFileImg] = useState([])\r\n    const [countFile, setCountFile] = useState([])\r\n\r\n    const [fileImg2, setFileImg2] = useState([])\r\n    const [countFile2, setCountFile2] = useState([])\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        var country = 'Peru', countryCode = \"+51\"\r\n\r\n        $(document).click(function(e){                      \r\n            if( $(e.target).closest('.container-flag').length<=0 && !$(e.target).hasClass('flat-item') ) $('.list-flag').fadeOut(150)\r\n        })\r\n\r\n        /********/\r\n\r\n        $(document).on('click', function(e){\r\n    \r\n            //----------\r\n            if( $(e.target).hasClass('item-popup') ){\r\n                setShowForm(false)\r\n            }\t\t\r\n    \r\n            if( $(e.target).hasClass('int-pscroll') ){\r\n                setShowForm(false)\r\n            }\r\n    \r\n        })\r\n\r\n    }, [])\r\n\r\n    const alphanumericValues = (str) => {\r\n        return str\r\n        .toString()                     // Cast to string\r\n        .toLowerCase()                  // Convert the string to lowercase letters\r\n        .normalize('NFD')       // The normalize() method returns the Unicode Normalization Form of a given string.\r\n        .trim()                         // Remove whitespace from both sides of a string\r\n        .replace(/\\s+/g, '-')           // Replace spaces with -\r\n        .replace(/[^\\w\\-]+/g, '')       // Remove all non-word chars\r\n        .replace(/\\-\\-+/g, '-') \r\n    }\r\n\r\n    const formReset = () => {\r\n        setFileImg([])\r\n        setCountFile([])\r\n        //document.querySelector(\"#form-data\").reset()\r\n        document.getElementsByTagName(\"form\")[0].reset()\r\n        document.querySelector('#comprobante_img_place').innerHTML = \"Adjuntar voucher\" \r\n        document.querySelector('#sle_estatuto_place').innerHTML = \"Adjuntar archivo\" \r\n    }\r\n\r\n    const fileOnChange = (e) => {   \r\n        if( e.target.files.length>0 ){   \r\n            let newNameDate = new Date().getTime()\r\n            let file = e.target.files[0]\r\n            let newName1 = file.name.split('.').shift()\r\n            let newName = alphanumericValues(newName1)\r\n            let blob = file.slice(0, file.size, file.type) \r\n            let newFile = new File([blob], newName + '-' + newNameDate + '.' + file.type.split('/')[1], {type: file.type})\r\n                \r\n            document.getElementById('comprobante_img_place').innerHTML = e.target.value.split(/(\\\\|\\/)/g).pop()\r\n            setFileImg(newFile)   \r\n            setCountFile([...countFile, newName])\r\n            document.querySelector('#name_img').value = newName + '-' + newNameDate + '.' + file.type.split('/')[1]   \r\n        }                    \r\n    }\r\n\r\n    const fileOnChange2 = (e) => { \r\n        if( e.target.files.length>0 ){     \r\n            let newNameDate = new Date().getTime()\r\n            let file = e.target.files[0]\r\n            let newName1 = file.name.split('.').shift()\r\n            let newName = alphanumericValues(newName1)\r\n            let blob = file.slice(0, file.size, file.type) \r\n            let newFile = new File([blob], newName + '-' + newNameDate + '.' + file.type.split('/')[1], {type: file.type})\r\n                \r\n            document.getElementById('sle_estatuto_place').innerHTML = e.target.value.split(/(\\\\|\\/)/g).pop()\r\n            setFileImg2(newFile)   \r\n            setCountFile2([...countFile2, newName])\r\n            document.querySelector('#name_img_2').value = newName + '-' + newNameDate + '.' + file.type.split('/')[1]    \r\n        }                   \r\n    }\r\n\r\n    const onSubmit = data => {    \r\n\r\n        console.log(data)\r\n    \r\n        //return false\r\n\r\n        if( countFile.length>0 ){                        \r\n            var formData = new FormData()   \r\n\r\n            if( countFile2.length>0 ){\r\n                formData.append(\"demo\", fileImg2)\r\n            }\r\n\r\n            formData.append(\"demo\", fileImg)            \r\n\r\n            axios.post(Config.URL_BACK + '/upload-only-img', formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            })\r\n            .then(res => {\r\n                console.log('Exito')                \r\n            }).catch(err => {\r\n                console.error('Error')\r\n            })\r\n        }\r\n\r\n        let sendValue = data\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: Config.API_PATH + '/p-ce',\r\n            data: sendValue\r\n        })\r\n        .then(function (response) {\r\n            setShowForm(true)\r\n            formReset()\r\n        })\r\n        \r\n    }\r\n    \r\n    const triggerClosePopup = () => {\r\n        setShowForm(false)\r\n    }\r\n\r\n    \r\n    return (\r\n\r\n        <>            \r\n            { showForm && (\r\n                <PopupThanks eClick={triggerClosePopup}>\r\n                    <h3 className=\"title\">¡Gracias!</h3>\r\n                    <p className=\"description\">Gracias por ponerte en contacto con <strong>Notaría Román.</strong> <br />Uno de nuestros asesores se comunicará con usted a la brevedad.</p>\r\n                </PopupThanks>\r\n            )}\r\n\r\n            <div className=\"section tramite-form with-bg-img\">\r\n\r\n                    <div className=\"row\">\r\n                        <div className={\"caption caption-static caption-type-1 caption-type-2 \" + props.width} style={{marginTop: 0}}>\r\n                            <div className=\"parent-title-2 start-xs\">\r\n                                <h2><strong>Constitución de empresas</strong></h2>                                \r\n                            </div>\r\n                            \r\n\r\n                            <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n                                <div className=\"block-form\">  \r\n\r\n                                    <input type=\"hidden\" id=\"name_img\" name=\"name_img\" \r\n                                    ref={register({\r\n                                        required: false\r\n                                    })}\r\n                                    />\r\n\r\n                                    <input type=\"hidden\" id=\"name_img_2\" name=\"name_img_2\" \r\n                                    ref={register({\r\n                                        required: false\r\n                                    })}\r\n                                    />\r\n\r\n                                    <div className=\"box-form\">\r\n                                        <label htmlFor=\"tipo_sociedad\">Por favor selecciona el <strong>tipo de sociedad:</strong></label>\r\n                                        <select \r\n                                        className=\"form-item\"\r\n                                        name=\"tipo_sociedad\"\r\n                                        id=\"tipo_sociedad\"\r\n                                        onChange={(e) => setFormBody(formBody ? false : true)}\r\n                                        ref={register({\r\n                                            required: \"Este campo es obligatorio\"\r\n                                        })}>\r\n                                            <option hidden value=\"\">Tipo de sociedad</option>\r\n                                            <option value=\"1\">Sociedad anónima S.A.</option>\r\n                                            <option value=\"2\">Sociedad anónima cerrada S.A.C.</option>\r\n                                            <option value=\"3\">Sociedad de responsabilidad limitada S.R.L</option>\r\n                                            <option value=\"4\">Empresa Individual de responsabilidad limitada E.I.R.L.</option>\r\n                                            <option value=\"5\">Sociedad colectiva</option>\r\n                                        </select>\r\n                                        {errors.tipo_sociedad && <span className=\"fi-validator\">{errors.tipo_sociedad.message}</span>}\r\n                                    </div>                                  \r\n                                    \r\n\r\n                                    <div className=\"form-text-line\">Constituyentes:</div>  \r\n\r\n                                    <div className=\"box-form\">\r\n                                        <label htmlFor=\"co_cantidad\">Cantidad:</label>\r\n                                        <select \r\n                                        className=\"form-item\"\r\n                                        id=\"co_cantidad\"\r\n                                        name=\"co_cantidad\"\r\n                                        ref={register({\r\n                                            required: \"Este campo es obligatorio\"\r\n                                        })}>\r\n                                            <option value=\"\">Seleccione el número de socios</option>\r\n                                            {Array.apply(1, Array(20)).map(function (x, i) {\r\n                                                return <option key={i+1} value={i+1}>{i+1 <= 9 ? '0' + (i+1) : (i+1)}</option>\r\n                                            })}\r\n                                        </select>\r\n                                        {errors.co_cantidad && <span className=\"fi-validator\">{errors.co_cantidad.message}</span>}\r\n                                    </div> \r\n\r\n\r\n\r\n                                    <div className=\"form-text-line\">Constituyente 1:</div>  \r\n\r\n                                    <div className=\"box-form\">\r\n                                        <label htmlFor=\"co1_nombre\">Nombre completo:</label>\r\n                                        <input type=\"text\" id=\"co1_nombre\" name=\"co1_nombre\" className=\"form-item\" \r\n                                        onInput={(e) => e.target.value = e.target.value.replace(/[^ a-záéíóúüñ]+/ig,\"\")}\r\n                                        ref={register({\r\n                                            required: \"Este campo es obligatorio\"\r\n                                        })}\r\n                                        />\r\n                                        {errors.co1_nombre && <span className=\"fi-validator\">{errors.co1_nombre.message}</span>}\r\n                                    </div> \r\n\r\n                                    <div className=\"group-form\">\r\n\r\n                                        <div className=\"g-form-col g-form-col-2 g-form-col-2-type-1\">\r\n\r\n                                            <p className=\"box-form\">\r\n                                                <label htmlFor=\"co1_tipo_doc\">Tipo de documento:</label>\r\n                                                <select \r\n                                                className=\"form-item\"\r\n                                                name=\"co1_tipo_doc\"\r\n                                                onChange={(e) => document.getElementById('co1_num_doc').focus()}\r\n                                                ref={register({\r\n                                                    required: \"Este campo es obligatorio\"\r\n                                                })}>\r\n                                                    <option defaultValue={true} value=\"1\">DNI</option>\r\n                                                    <option value=\"2\">Carnet de extranjeria</option>\r\n                                                    <option value=\"3\">Pasaporte</option>\r\n                                                </select>\r\n                                                {errors.co1_tipo_doc && <span className=\"fi-validator\">{errors.co1_tipo_doc.message}</span>}\r\n                                            </p>\r\n\r\n                                            <p className=\"box-form\">\r\n                                                <label htmlFor=\"co1_num_doc\">Número de Documento</label>\r\n                                                <input type=\"text\" id=\"co1_num_doc\" name=\"co1_num_doc\" className=\"form-item\"                                                 \r\n                                                ref={register({required: \"Apellidos es obligatorio\"})} />\r\n                                                {errors.co1_num_doc && <span className=\"fi-validator\">{errors.co1_num_doc.message}</span>}\r\n                                            </p>\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                    <div className=\"box-form\">\r\n                                        <label htmlFor=\"co1_estado_civil\">Estado civil:</label>\r\n                                        <select \r\n                                        className=\"form-item\"\r\n                                        id=\"co1_estado_civil\"\r\n                                        name=\"co1_estado_civil\"\r\n                                        ref={register({\r\n                                            required: \"Este campo es obligatorio\"\r\n                                        })}>\r\n                                            <option hidden value=\"\">Seleccione un estado</option>\r\n                                            <option value=\"1\">Soltero</option>\r\n                                            <option value=\"2\">Casado</option>\r\n                                            <option value=\"3\">divorciado</option>\r\n                                            <option value=\"4\">Viudo</option>\r\n                                        </select>\r\n                                        {errors.co1_estado_civil && <span className=\"fi-validator\">{errors.co1_estado_civil.message}</span>}\r\n                                    </div>\r\n\r\n                                    <div className=\"box-form\">\r\n                                        <label htmlFor=\"co1_nacionalidad\">Nacionalidad</label>\r\n                                        <input type=\"text\" id=\"co1_nacionalidad\" name=\"co1_nacionalidad\" className=\"form-item\" \r\n                                        onInput={(e) => e.target.value = e.target.value.replace(/[^ a-záéíóúüñ]+/ig,\"\")}\r\n                                        ref={register({\r\n                                            required: \"Este campo es obligatorio\"\r\n                                        })}\r\n                                        />\r\n                                        {errors.co1_nacionalidad && <span className=\"fi-validator\">{errors.co1_nacionalidad.message}</span>}\r\n                                    </div> \r\n\r\n                                    <div className=\"box-form\">\r\n                                        <label htmlFor=\"co1_direccion\">Dirección</label>\r\n                                        <input type=\"text\" id=\"co1_direccion\" name=\"co1_direccion\" className=\"form-item\"                                         \r\n                                        ref={register({\r\n                                            required: \"Este campo es obligatorio\"\r\n                                        })}\r\n                                        />\r\n                                        {errors.co1_direccion && <span className=\"fi-validator\">{errors.co1_direccion.message}</span>}\r\n                                    </div>\r\n\r\n                                    <div className=\"box-form\">\r\n                                        <label htmlFor=\"co1_ocupacion\">Ocupación:</label>\r\n                                        <input type=\"text\" id=\"co1_ocupacion\" name=\"co1_ocupacion\" className=\"form-item\" \r\n                                        onInput={(e) => e.target.value = e.target.value.replace(/[^ a-záéíóúüñ]+/ig,\"\")}\r\n                                        ref={register({\r\n                                            required: \"Este campo es obligatorio\"\r\n                                        })}\r\n                                        />\r\n                                        {errors.co1_ocupacion && <span className=\"fi-validator\">{errors.co1_ocupacion.message}</span>}\r\n                                    </div> \r\n\r\n                                    <div className=\"box-form\">\r\n                                        <label htmlFor=\"co1_conyuge\">Cónyuge (opcional):</label>\r\n                                        <input type=\"text\" id=\"co1_conyuge\" name=\"co1_conyuge\" className=\"form-item\" \r\n                                        onInput={(e) => e.target.value = e.target.value.replace(/[^ a-záéíóúüñ]+/ig,\"\")}\r\n                                        ref={register({\r\n                                            required: false\r\n                                        })}\r\n                                        />                                        \r\n                                    </div> \r\n\r\n                                    \r\n\r\n                                    <div className=\"form-text-line\">Sobre la empresa:</div> \r\n\r\n                                    <div className=\"box-form\">\r\n                                        <label htmlFor=\"sle_nombre\">Nombres de la empresa:</label>\r\n                                        <input type=\"text\" id=\"sle_nombre\" name=\"sle_nombre\" className=\"form-item\" \r\n                                        onInput={(e) => e.target.value = e.target.value.replace(/[^ a-záéíóúüñ]+/ig,\"\")}\r\n                                        ref={register({\r\n                                            required: \"Este campo es obligatorio\"\r\n                                        })}\r\n                                        />\r\n                                        {errors.sle_nombre && <span className=\"fi-validator\">{errors.sle_nombre.message}</span>}\r\n                                    </div> \r\n\r\n                                    <div className=\"box-form\">\r\n                                        <label htmlFor=\"sle_sigla\">Sigla (opcional):</label>\r\n                                        <input type=\"text\" id=\"sle_sigla\" name=\"sle_sigla\" className=\"form-item\" \r\n                                        onInput={(e) => e.target.value = e.target.value.replace(/[^ a-záéíóúüñ]+/ig,\"\")}\r\n                                        ref={register({\r\n                                            required: false\r\n                                        })}\r\n                                        />                                        \r\n                                    </div>\r\n\r\n                                    <div className=\"box-form\">\r\n                                        <label htmlFor=\"sle_capital_social\">Capital social S/.:</label>\r\n                                        <input type=\"text\" id=\"sle_capital_social\" name=\"sle_capital_social\" className=\"form-item\" \r\n                                        onInput={(e) => e.target.value = e.target.value.replace(/[^ a-záéíóúüñ]+/ig,\"\")}\r\n                                        ref={register({\r\n                                            required: \"Este campo es obligatorio\"\r\n                                        })}\r\n                                        />\r\n                                        {errors.sle_capital_social && <span className=\"fi-validator\">{errors.sle_capital_social.message}</span>}\r\n                                    </div>\r\n\r\n                                    <div className=\"box-form\">\r\n                                        <label htmlFor=\"sle_division\">División de acciones:</label>                                        \r\n                                        <textarea id=\"sle_division\" name=\"sle_division\" className=\"form-item item-textarea\"\r\n                                        ref={register({\r\n                                            required: \"Este campo es obligatorio\"\r\n                                        })}\r\n                                        ></textarea>\r\n                                        {errors.sle_division && <span className=\"fi-validator\">{errors.sle_division.message}</span>}\r\n                                    </div>\r\n\r\n                                    <div className=\"box-form\">\r\n                                        <label htmlFor=\"sle_domicilio\">Domicilio de la empresa:</label>\r\n                                        <input type=\"text\" id=\"sle_domicilio\" name=\"sle_domicilio\" className=\"form-item\" \r\n                                        onInput={(e) => e.target.value = e.target.value.replace(/[^ a-záéíóúüñ]+/ig,\"\")}\r\n                                        ref={register({\r\n                                            required: \"Este campo es obligatorio\"\r\n                                        })}\r\n                                        />\r\n                                        {errors.sle_domicilio && <span className=\"fi-validator\">{errors.sle_domicilio.message}</span>}\r\n                                    </div>\r\n\r\n                                    <div className=\"box-form\">\r\n                                        <label htmlFor=\"sle_nombre_gerente\">Nombre del gerente general:</label>\r\n                                        <input type=\"text\" id=\"sle_nombre_gerente\" name=\"sle_nombre_gerente\" className=\"form-item\" \r\n                                        onInput={(e) => e.target.value = e.target.value.replace(/[^ a-záéíóúüñ]+/ig,\"\")}\r\n                                        ref={register({\r\n                                            required: \"Este campo es obligatorio\"\r\n                                        })}\r\n                                        />\r\n                                        {errors.sle_nombre_gerente && <span className=\"fi-validator\">{errors.sle_nombre_gerente.message}</span>}\r\n                                    </div>\r\n                        \r\n                                    <div className=\"group-form\">\r\n\r\n                                        <div className=\"g-form-col g-form-col-2 g-form-col-2-type-1\">\r\n\r\n                                            <p className=\"box-form\">\r\n                                                <label htmlFor=\"sle_tipo_doc\">Tipo de documento:</label>\r\n                                                <select \r\n                                                className=\"form-item\"\r\n                                                name=\"sle_tipo_doc\"\r\n                                                onChange={(e) => document.getElementById('sle_num_doc').focus()}\r\n                                                ref={register({\r\n                                                    required: \"Este campo es obligatorio\"\r\n                                                })}>\r\n                                                    <option defaultValue={true} value=\"1\">DNI</option>\r\n                                                    <option value=\"2\">Carnet de extranjeria</option>\r\n                                                    <option value=\"3\">Pasaporte</option>\r\n                                                </select>\r\n                                                {errors.sle_tipo_doc && <span className=\"fi-validator\">{errors.sle_tipo_doc.message}</span>}\r\n                                            </p>\r\n\r\n                                            <p className=\"box-form\">\r\n                                                <label htmlFor=\"sle_num_doc\">Número de Documento</label>\r\n                                                <input type=\"text\" id=\"sle_num_doc\" name=\"sle_num_doc\" className=\"form-item\"                                                 \r\n                                                ref={register({required: \"Apellidos es obligatorio\"})} />\r\n                                                {errors.sle_num_doc && <span className=\"fi-validator\">{errors.sle_num_doc.message}</span>}\r\n                                            </p>\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                    <div className=\"box-form box-file-img\">\r\n                                        <div className=\"title\">Estatuto de la empresa:</div>\r\n                                        <label className=\"form-item\" id=\"sle_estatuto_place\" htmlFor=\"sle_estatuto\">Adjuntar archivo</label>\r\n                                        <input type=\"file\" id=\"sle_estatuto\" name=\"sle_estatuto\" className=\"form-item\" accept=\".doc, .jpg, .jpeg, .pdf\"\r\n                                        onChange={(e) => fileOnChange2(e)}\r\n                                        ref={register({\r\n                                            required: \"Este campo es obligatorio\"\r\n                                        })}\r\n                                        />  \r\n                                        {errors.sle_estatuto && <span className=\"fi-validator\">{errors.sle_estatuto.message}</span>}          \r\n                                    </div>\r\n\r\n\r\n\r\n\r\n                                    <div className=\"form-text-line\">Datos de contacto</div>\r\n\r\n                                    <div className=\"box-form\">\r\n                                        <label htmlFor=\"dc_nombre\">Nombres completos:</label>\r\n                                        <input type=\"text\" id=\"dc_nombre\" name=\"dc_nombre\" className=\"form-item\" \r\n                                        onInput={(e) => e.target.value = e.target.value.replace(/[^ a-záéíóúüñ]+/ig,\"\")}\r\n                                        ref={register({\r\n                                            required: \"Este campo es obligatorio\"\r\n                                        })}\r\n                                        />\r\n                                        {errors.dc_nombre && <span className=\"fi-validator\">{errors.dc_nombre.message}</span>}\r\n                                    </div> \r\n\r\n                                    <div className=\"box-form\">\r\n                                        <label htmlFor=\"dc_telefono\">Teléfonos:</label>\r\n                                        <input type=\"text\" id=\"dc_telefono\" name=\"dc_telefono\" className=\"form-item\"\r\n                                        onInput={(e) => e.target.value = e.target.value.replace(/[^0-9]+/ig, '')}                                          \r\n                                        ref={register({\r\n                                            required: \"Este campo es obligatorio\"\r\n                                        })}\r\n                                        />\r\n                                        {errors.dc_telefono && <span className=\"fi-validator\">{errors.dc_telefono.message}</span>}\r\n                                    </div> \r\n\r\n                                    <div className=\"box-form\">\r\n                                        <label htmlFor=\"dc_email\">Email:</label>\r\n                                        <input type=\"text\" id=\"dc_email\" name=\"dc_email\" className=\"form-item\" \r\n                                        placeholder=\"Detalle con quién viaja y otros\"                                        \r\n                                        ref={register({\r\n                                            required: \"Este campo es obligatorio\",\r\n                                            pattern: {\r\n                                                value: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n                                                message: \"Ingresar un Email valido\"\r\n                                            }\r\n                                        })}\r\n                                        />\r\n                                        {errors.dc_email && <span className=\"fi-validator\">{errors.dc_email.message}</span>}\r\n                                    </div> \r\n\r\n                                    <FormPayment />\r\n\r\n                                    <div className=\"box-form box-file-img box-form-mg-2\">\r\n                                        <div className=\"title\">Comprobante de pago (opcional):</div>\r\n                                        <label className=\"form-item\" id=\"comprobante_img_place\" htmlFor=\"comprobante_img\">Adjuntar voucher</label>\r\n                                        <input type=\"file\" id=\"comprobante_img\" name=\"comprobante_img\" className=\"form-item\" placeholder=\"Detalle con quién viaja y otros\" \r\n                                        accept=\".jpg, .jpeg, .png\"\r\n                                        onChange={(e) => fileOnChange(e)}\r\n                                        />            \r\n                                    </div>\r\n\r\n\r\n                                    <button type=\"submit\" className=\"button\">Enviar trámite</button>\r\n\r\n\r\n\r\n                                </div>     \r\n\r\n                            </form>                           \r\n\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n            </div>\r\n\r\n        </>\r\n        \r\n    )\r\n}\r\n\r\n\r\nexport default ConstitucionEmpresas"]},"metadata":{},"sourceType":"module"}